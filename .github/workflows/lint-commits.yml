name: Lint Commit Messages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  commitlint:
    name: Lint Commit Messages
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install commitlint
      run: |
        npm install -g @commitlint/cli

    - name: Lint commit messages
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # For PRs, check all commits in the PR
          commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
        else
          # For pushes, check the last commit
          commitlint --from HEAD~1 --to HEAD --verbose
        fi

    - name: Check commit message format
      run: |
        # Additional custom checks for our specific format requirements
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          COMMITS=$(git log --format="%s" ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
        else
          COMMITS=$(git log --format="%s" -1)
        fi
        
        echo "Checking commit messages:"
        echo "$COMMITS"
        
        # Check each commit message
        echo "$COMMITS" | while IFS= read -r commit; do
          if [ -n "$commit" ]; then
            # Check format: type: description
            if ! echo "$commit" | grep -qE '^(feat|fix|docs|style|refactor|test|chore): .+'; then
              echo "❌ Invalid commit format: $commit"
              echo "Expected format: 'type: description'"
              echo "Allowed types: feat, fix, docs, style, refactor, test, chore"
              exit 1
            else
              echo "✅ Valid commit format: $commit"
            fi
          fi
        done